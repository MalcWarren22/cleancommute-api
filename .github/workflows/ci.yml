      - name: Smoke test with Flask test client
        run: |
          python - <<'PY'
          import os
          os.environ.setdefault("DISABLE_HTTPS_REDIRECT","1")  # harmless if your app reads it; but we'll also call via https
          from app import app

          c = app.test_client()

          # always call over HTTPS so Flask-Talisman doesn't 302
          def GET(path, **kw):  return c.open(path, method="GET",  base_url="https://localhost", **kw)
          def POST(path, **kw): return c.open(path, method="POST", base_url="https://localhost", **kw)

          def expect(code, resp, msg=""):
              if resp.status_code != code:
                  print("Unexpected:", resp.status_code, resp.data.decode())
                  raise SystemExit(1)

          # health / db
          expect(200, GET("/api/v1/health"))
          expect(200, GET("/api/v1/db-ping"))

          # unauthorized POST is blocked
          r = POST("/api/v1/commutes", json={"distance_km": 1, "mode": "car"})
          assert r.status_code == 401, r.status_code

          headers = {"x-api-key": os.environ["API_KEY"]}

          # happy path
          r = POST("/api/v1/commutes", headers=headers,
                   json={"distance_km": 2.5, "mode": "car", "origin": "CI", "destination": "Check"})
          expect(201, r)

          r = GET("/api/v1/commutes?limit=1")
          expect(200, r)
          data = r.get_json()
          assert isinstance(data, list) and len(data) >= 1

          r = POST("/api/v1/samples", headers=headers, json={"name":"CI","status":"ok"})
          expect(201, r)
          r = GET("/api/v1/samples?limit=1")
          expect(200, r)

          print("SMOKE OK")
          PY
